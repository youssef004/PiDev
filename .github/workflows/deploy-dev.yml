name: Deploiements-test

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branche release ou feature/hotfix'
        required: true
        default: 'release' 

jobs:
  deploy-preprod:
    runs-on: ubuntu-latest
    if: github.event.inputs.branch == 'release'
    steps:
      - name: SSH-Connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "Successfully executed ssh connection"

      - name: Deploy-WP-next-preprod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            ls
            cd /app/client/
            ls -lrth
        
            git pull origin release

  deploy-dev-local:
    runs-on: ubuntu-latest
    if: startsWith(github.event.inputs.branch, 'feature/') || startsWith(github.event.inputs.branch, 'hotfix/')
    steps:
      - name: Vérifier la branche
        run: echo "La branche de déploiement est ${{ github.event.inputs.branch }}"

      - name: Déploiement sur Dev-Local
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            ls
            cd /app/client/
            ls -lrth
            git pull 

  deploy-dev-dev:
    runs-on: ubuntu-latest
    if: github.event.inputs.branch == 'dev'
    steps:
      - name: Vérifier la branche
        run: echo "La branche de déploiement est ${{ github.event.inputs.branch }}"

      - name: Déploiement sur Dev-dev
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            ls
            cd /app/client
            ls -lrth
            git pull 
  
